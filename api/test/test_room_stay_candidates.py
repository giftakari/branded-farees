# coding: utf-8

"""
    Akaris Travels Air

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 11.10.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import openapi_client
from openapi_client.models.room_stay_candidates import RoomStayCandidates  # noqa: E501
from openapi_client.rest import ApiException

class TestRoomStayCandidates(unittest.TestCase):
    """RoomStayCandidates unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test RoomStayCandidates
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RoomStayCandidates`
        """
        model = openapi_client.models.room_stay_candidates.RoomStayCandidates()  # noqa: E501
        if include_optional :
            return RoomStayCandidates(
                room_stay_candidate = [
                    openapi_client.models.room_stay_candidate.RoomStayCandidate(
                        guest_counts = openapi_client.models.guest_counts.GuestCounts(
                            @type = 'GuestCounts', 
                            guest_count = [
                                openapi_client.models.guest_count.GuestCount(
                                    @type = 'GuestCount', 
                                    age = 21, 
                                    count = 2, 
                                    age_qualifying_code = '10', )
                                ], ), 
                        room_amenity = [
                            openapi_client.models.room_amenity.RoomAmenity(
                                @type = 'RoomAmenity', 
                                description = 'WiFi', 
                                quantity = 0, 
                                name = '24 hour Room Service', 
                                inclusion = [
                                    ''
                                    ], 
                                included_ind = True, 
                                surcharge_ind = True, 
                                code = '8Q6', )
                            ], )
                    ]
            )
        else :
            return RoomStayCandidates(
                room_stay_candidate = [
                    openapi_client.models.room_stay_candidate.RoomStayCandidate(
                        guest_counts = openapi_client.models.guest_counts.GuestCounts(
                            @type = 'GuestCounts', 
                            guest_count = [
                                openapi_client.models.guest_count.GuestCount(
                                    @type = 'GuestCount', 
                                    age = 21, 
                                    count = 2, 
                                    age_qualifying_code = '10', )
                                ], ), 
                        room_amenity = [
                            openapi_client.models.room_amenity.RoomAmenity(
                                @type = 'RoomAmenity', 
                                description = 'WiFi', 
                                quantity = 0, 
                                name = '24 hour Room Service', 
                                inclusion = [
                                    ''
                                    ], 
                                included_ind = True, 
                                surcharge_ind = True, 
                                code = '8Q6', )
                            ], )
                    ],
        )
        """

    def testRoomStayCandidates(self):
        """Test RoomStayCandidates"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
