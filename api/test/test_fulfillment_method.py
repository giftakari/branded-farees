# coding: utf-8

"""
    Akaris Travels Air

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 11.10.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import openapi_client
from openapi_client.models.fulfillment_method import FulfillmentMethod  # noqa: E501
from openapi_client.rest import ApiException

class TestFulfillmentMethod(unittest.TestCase):
    """FulfillmentMethod unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test FulfillmentMethod
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FulfillmentMethod`
        """
        model = openapi_client.models.fulfillment_method.FulfillmentMethod()  # noqa: E501
        if include_optional :
            return FulfillmentMethod(
                type = 'FulfillmentMethod', 
                product_refs = [], 
                segment_sequence_list = [234,518,9023], 
                refund_method = MCO, 
                change_fee_collection_method = openapi_client.models.change_fee_collection_method.ChangeFeeCollectionMethod(
                    value = openapi_client.models.change_fee_method_enum.ChangeFeeMethodEnum(), 
                    code = 'f2142', 
                    sub_code = '631b', 
                    description = 'Change fee collection method', 
                    change_fee_issued_separately_ind = True, 
                    tax_included_in_base_amount_ind = True, )
            )
        else :
            return FulfillmentMethod(
        )
        """

    def testFulfillmentMethod(self):
        """Test FulfillmentMethod"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
