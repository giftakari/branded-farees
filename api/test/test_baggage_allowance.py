# coding: utf-8

"""
    Akaris Travels Air

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 11.10.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import openapi_client
from openapi_client.models.baggage_allowance import BaggageAllowance  # noqa: E501
from openapi_client.rest import ApiException

class TestBaggageAllowance(unittest.TestCase):
    """BaggageAllowance unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test BaggageAllowance
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BaggageAllowance`
        """
        model = openapi_client.models.baggage_allowance.BaggageAllowance()  # noqa: E501
        if include_optional :
            return BaggageAllowance(
                type = 'BaggageAllowance', 
                passenger_type_codes = [
                    '["CHD","ADT","INF"]'
                    ], 
                baggage_type = 'CarryOn', 
                product_ref = ["baloon","vase","pillow"], 
                baggage_item = [
                    openapi_client.models.baggage_item.BaggageItem(
                        @type = 'BaggageItem', 
                        quantity = 2, 
                        measurement = [
                            openapi_client.models.measurement.Measurement(
                                value = 2.22, 
                                measurement_type = 'Width', 
                                unit = 'Miles', )
                            ], 
                        baggage_fee = openapi_client.models.currency_amount.CurrencyAmount(
                            value = 124.56, 
                            code = 'USD', 
                            minor_unit = 2, 
                            currency_source = 'Supplier', 
                            approximate_ind = True, ), 
                        text = 'The payment was correct', )
                    ], 
                segment_sequence_list = [12,45,3,2], 
                text = Blue baggage and purple allowed
            )
        else :
            return BaggageAllowance(
                type = 'BaggageAllowance',
        )
        """

    def testBaggageAllowance(self):
        """Test BaggageAllowance"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
