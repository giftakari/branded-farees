# coding: utf-8

"""
    Akaris Travels Air

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 11.10.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import openapi_client
from openapi_client.models.currency_rate_conversion import CurrencyRateConversion  # noqa: E501
from openapi_client.rest import ApiException

class TestCurrencyRateConversion(unittest.TestCase):
    """CurrencyRateConversion unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test CurrencyRateConversion
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CurrencyRateConversion`
        """
        model = openapi_client.models.currency_rate_conversion.CurrencyRateConversion()  # noqa: E501
        if include_optional :
            return CurrencyRateConversion(
                type = 'CurrencyRateConversion', 
                source_currency = openapi_client.models.currency_code.CurrencyCode(
                    value = 'USD', 
                    code_authority = 'ISO 4217', 
                    decimal_place = 4, 
                    decimal_authority = 'ISO 4217', ), 
                target_currency = openapi_client.models.currency_code.CurrencyCode(
                    value = 'USD', 
                    code_authority = 'ISO 4217', 
                    decimal_place = 4, 
                    decimal_authority = 'ISO 4217', ), 
                conversion_rate = openapi_client.models.conversion_rate.ConversionRate(
                    value = 1.337, 
                    rate_authority = 'ISO 4217', 
                    rate_as_of = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
            )
        else :
            return CurrencyRateConversion(
                source_currency = openapi_client.models.currency_code.CurrencyCode(
                    value = 'USD', 
                    code_authority = 'ISO 4217', 
                    decimal_place = 4, 
                    decimal_authority = 'ISO 4217', ),
                target_currency = openapi_client.models.currency_code.CurrencyCode(
                    value = 'USD', 
                    code_authority = 'ISO 4217', 
                    decimal_place = 4, 
                    decimal_authority = 'ISO 4217', ),
                conversion_rate = openapi_client.models.conversion_rate.ConversionRate(
                    value = 1.337, 
                    rate_authority = 'ISO 4217', 
                    rate_as_of = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
        )
        """

    def testCurrencyRateConversion(self):
        """Test CurrencyRateConversion"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
