# coding: utf-8

"""
    Akaris Travels Air

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 11.10.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import openapi_client
from openapi_client.models.offer_query_build_from_shopping_cart_products import OfferQueryBuildFromShoppingCartProducts  # noqa: E501
from openapi_client.rest import ApiException

class TestOfferQueryBuildFromShoppingCartProducts(unittest.TestCase):
    """OfferQueryBuildFromShoppingCartProducts unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test OfferQueryBuildFromShoppingCartProducts
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OfferQueryBuildFromShoppingCartProducts`
        """
        model = openapi_client.models.offer_query_build_from_shopping_cart_products.OfferQueryBuildFromShoppingCartProducts()  # noqa: E501
        if include_optional :
            return OfferQueryBuildFromShoppingCartProducts(
                type = 'OfferQueryBuildFromShoppingCartProducts', 
                pricing_modifiers_air = openapi_client.models.pricing_modifiers_air.PricingModifiersAir(
                    @type = 'PricingModifiersAir', 
                    currency_code = 'CAD', 
                    fare_selection = null, 
                    organization_information = openapi_client.models.organization_information.OrganizationInformation(
                        @type = 'OrganizationInformation', 
                        organization_identifier = [
                            openapi_client.models.organization_identifier.OrganizationIdentifier(
                                value = 'JBD123456', 
                                supplier = 'AA', 
                                organization_code_type = 'Account', 
                                segment_sequence_list = [1,2,3], 
                                product_ref = ["product_1","product_2"], 
                                account_code_fares_only_ind = True, )
                            ], 
                        gst_registration_number = [
                            openapi_client.models.gst_registration_number.GSTRegistrationNumber(
                                value = '07AAGFF2194N1Z1', 
                                telephone = '222-222-222', 
                                address = '1122 sample trail, CO, USA, 21232', 
                                country = 'India', 
                                company_name = 'American Airlines', 
                                email = 'sample@aa.com', )
                            ], ), 
                    tax_exemption = openapi_client.models.tax_exemption.TaxExemption(
                        @type = 'TaxExemption', 
                        countries = CA, 
                        tax_codes = ["YQ","US"], 
                        all_taxes_exempt_ind = True, ), 
                    promotional_code = [
                        openapi_client.models.promotional_code.PromotionalCode(
                            value = 'CDFRT', 
                            supplier_code = 'AA', )
                        ], 
                    sell_city = 'MEX', 
                    ticket_city = 'MEX', 
                    pricing_pcc = 'Cu2LC4a01', 
                    ticketing_pcc = 'Cu2LC4a01', 
                    include_split_payment_ind = True, 
                    return_most_restrictive_brand_ind = True, 
                    split_payment_offerings = 25, ), 
                product_identifier = [
                    openapi_client.models.product_id.ProductID(
                        @type = 'ProductAir', 
                        id = 'product_1', 
                        product_ref = 'product_1', 
                        identifier = openapi_client.models.identifier.Identifier(
                            value = 'A0656EFF-FAF4-456F-B061-0161008D7C4E', 
                            authority = 'TVPT', ), )
                    ], 
                payment_criteria = openapi_client.models.payment_criteria.PaymentCriteria(
                    @type = 'PaymentCriteria', 
                    issuer_identification_number = '78', 
                    payment_card_code = 'AD', 
                    document_number = [
                        openapi_client.models.document_number.DocumentNumber(
                            value = '1259900123456', 
                            document_issuer = 'BA', 
                            document_type = 'Ticket', )
                        ], 
                    agency_account_ind = True, 
                    bsp_ind = True, 
                    cash_ind = True, 
                    invoice_ind = True, )
            )
        else :
            return OfferQueryBuildFromShoppingCartProducts(
                type = 'OfferQueryBuildFromShoppingCartProducts',
        )
        """

    def testOfferQueryBuildFromShoppingCartProducts(self):
        """Test OfferQueryBuildFromShoppingCartProducts"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
