# coding: utf-8

"""
    Akaris Travels Air

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 11.10.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import openapi_client
from openapi_client.models.reservation import Reservation  # noqa: E501
from openapi_client.rest import ApiException

class TestReservation(unittest.TestCase):
    """Reservation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Reservation
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Reservation`
        """
        model = openapi_client.models.reservation.Reservation()  # noqa: E501
        if include_optional :
            return Reservation(
                offer = [
                    null
                    ], 
                traveler = [
                    null
                    ], 
                traveler_product = [
                    null
                    ], 
                form_of_payment = [
                    openapi_client.models.form_of_payment_id.FormOfPaymentID(
                        @type = 'FormOfPaymentPaymentCard', 
                        id = '', 
                        form_of_payment_ref = '', 
                        identifier = openapi_client.models.identifier.Identifier(
                            value = 'A0656EFF-FAF4-456F-B061-0161008D7C4E', 
                            authority = 'TVPT', ), )
                    ], 
                payment = [
                    null
                    ], 
                receipt = [
                    null
                    ], 
                offer_link = [
                    openapi_client.models.offer_link.OfferLink(
                        @type = 'OfferLink', 
                        offer_ref = '', 
                        parent_offer = openapi_client.models.parent_offer.ParentOffer(
                            @type = 'ParentOffer', 
                            offer_ref = '', 
                            product_ref = '', ), )
                    ], 
                reservation_comment = [
                    null
                    ], 
                primary_contact = [
                    null
                    ], 
                travel_agency = None, 
                group_name = '', 
                special_service = [
                    null
                    ], 
                preference = None, 
                organization_loyalty_program = [
                    null
                    ], 
                shopping_cart = openapi_client.models.shopping_cart.ShoppingCart(
                    @type = 'ShoppingCart', 
                    product = [
                        null
                        ], ), 
                reservation_display_sequence = openapi_client.models.reservation_display_sequence.ReservationDisplaySequence(
                    @type = '', 
                    display_sequence = [
                        openapi_client.models.display_sequence.DisplaySequence(
                            @type = 'DisplaySequence', 
                            display_sequence = '1', 
                            offer_ref = '', 
                            product_ref = '', 
                            sequence = 1, )
                        ], 
                    auto_delete_date_sequence = 0, ), 
                agency_service_fee = [
                    null
                    ], 
                auto_delete_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                notification_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date()
            )
        else :
            return Reservation(
        )
        """

    def testReservation(self):
        """Test Reservation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
