# coding: utf-8

"""
    Akaris Travels Air

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 11.10.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import openapi_client
from openapi_client.models.catalog_product_offerings_query_build_options import CatalogProductOfferingsQueryBuildOptions  # noqa: E501
from openapi_client.rest import ApiException

class TestCatalogProductOfferingsQueryBuildOptions(unittest.TestCase):
    """CatalogProductOfferingsQueryBuildOptions unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test CatalogProductOfferingsQueryBuildOptions
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CatalogProductOfferingsQueryBuildOptions`
        """
        model = openapi_client.models.catalog_product_offerings_query_build_options.CatalogProductOfferingsQueryBuildOptions()  # noqa: E501
        if include_optional :
            return CatalogProductOfferingsQueryBuildOptions(
                type = 'CatalogProductOfferingsQueryBuildOptions', 
                build_options = openapi_client.models.build_options.BuildOptions(
                    @type = 'BuildOptionsFromCatalogProductOptions', 
                    max_number_of_upsells_to_return = 2, 
                    payment_criteria = openapi_client.models.payment_criteria.PaymentCriteria(
                        @type = 'PaymentCriteria', 
                        issuer_identification_number = '78', 
                        payment_card_code = 'AD', 
                        document_number = [
                            openapi_client.models.document_number.DocumentNumber(
                                value = '1259900123456', 
                                document_issuer = 'BA', 
                                document_type = 'Ticket', )
                            ], 
                        agency_account_ind = True, 
                        bsp_ind = True, 
                        cash_ind = True, 
                        invoice_ind = True, ), 
                    fare_rule_type = 'Structured', 
                    fare_rule_category = [
                        'AdvanceReservationsTicketing'
                        ], 
                    return_branded_fares_ind = True, )
            )
        else :
            return CatalogProductOfferingsQueryBuildOptions(
                type = 'CatalogProductOfferingsQueryBuildOptions',
                build_options = openapi_client.models.build_options.BuildOptions(
                    @type = 'BuildOptionsFromCatalogProductOptions', 
                    max_number_of_upsells_to_return = 2, 
                    payment_criteria = openapi_client.models.payment_criteria.PaymentCriteria(
                        @type = 'PaymentCriteria', 
                        issuer_identification_number = '78', 
                        payment_card_code = 'AD', 
                        document_number = [
                            openapi_client.models.document_number.DocumentNumber(
                                value = '1259900123456', 
                                document_issuer = 'BA', 
                                document_type = 'Ticket', )
                            ], 
                        agency_account_ind = True, 
                        bsp_ind = True, 
                        cash_ind = True, 
                        invoice_ind = True, ), 
                    fare_rule_type = 'Structured', 
                    fare_rule_category = [
                        'AdvanceReservationsTicketing'
                        ], 
                    return_branded_fares_ind = True, ),
        )
        """

    def testCatalogProductOfferingsQueryBuildOptions(self):
        """Test CatalogProductOfferingsQueryBuildOptions"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
