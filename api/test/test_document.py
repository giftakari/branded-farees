# coding: utf-8

"""
    Akaris Travels Air

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 11.10.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import openapi_client
from openapi_client.models.document import Document  # noqa: E501
from openapi_client.rest import ApiException

class TestDocument(unittest.TestCase):
    """Document unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Document
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Document`
        """
        model = openapi_client.models.document.Document()  # noqa: E501
        if include_optional :
            return Document(
                type = 'DocumentTicket', 
                number = '23', 
                traveler_identifier_ref = openapi_client.models.traveler_identifier_ref.TravelerIdentifierRef(
                    name = '', 
                    passenger_type_code = 'ADT', ), 
                amount = openapi_client.models.amount.Amount(
                    @type = 'Amount', 
                    currency_source = 'Supplier', 
                    currency_code = openapi_client.models.currency_code.CurrencyCode(
                        value = 'USD', 
                        code_authority = 'ISO 4217', 
                        decimal_place = 4, 
                        decimal_authority = 'ISO 4217', ), 
                    base = 120.2, 
                    taxes = openapi_client.models.taxes.Taxes(
                        @type = 'TaxesDetail', 
                        total_taxes = 330.1, 
                        tax_info = [
                            openapi_client.models.tax_info.TaxInfo(
                                tax_code = 'XF', 
                                amount = 1.337, 
                                tax_breakdown = [
                                    openapi_client.models.tax_breakdown.TaxBreakdown(
                                        airport_code = 'MIA', )
                                    ], )
                            ], ), 
                    fees = openapi_client.models.fees.Fees(
                        @type = 'FeesDetail', 
                        total_fees = 111.11, ), 
                    total = 30.13, 
                    approximate_ind = True, ), 
                waiver_code = openapi_client.models.waiver_code.WaiverCode(
                    value = '', 
                    reason_code = 3312, ), 
                commission = openapi_client.models.commission.Commission(
                    @type = 'Commission', 
                    application = 'Full', ), 
                cumulative_value = openapi_client.models.cumulative_value.CumulativeValue(
                    @type = 'Amount', 
                    currency_source = 'Supplier', 
                    currency_code = openapi_client.models.currency_code.CurrencyCode(
                        value = 'USD', 
                        code_authority = 'ISO 4217', 
                        decimal_place = 4, 
                        decimal_authority = 'ISO 4217', ), 
                    base = 120.2, 
                    taxes = openapi_client.models.taxes.Taxes(
                        @type = 'TaxesDetail', 
                        total_taxes = 330.1, 
                        tax_info = [
                            openapi_client.models.tax_info.TaxInfo(
                                tax_code = 'XF', 
                                amount = 1.337, 
                                tax_breakdown = [
                                    openapi_client.models.tax_breakdown.TaxBreakdown(
                                        airport_code = 'MIA', 
                                        amount = 1.337, )
                                    ], )
                            ], ), 
                    fees = openapi_client.models.fees.Fees(
                        @type = 'FeesDetail', 
                        total_fees = 111.11, ), 
                    total = 30.13, 
                    approximate_ind = True, ), 
                issuing_pcc = 'RPO of india', 
                issuing_iata = 'U.S. passport', 
                issuing_city = 'NYK', 
                filed_amount = openapi_client.models.filed_amount.FiledAmount(
                    value = 43.3422, 
                    currency_code = 'USD', 
                    code_authority = 'Australian Dollar', 
                    decimal_place = 3, 
                    decimal_authority = 'ISO 4217', )
            )
        else :
            return Document(
                type = 'DocumentTicket',
        )
        """

    def testDocument(self):
        """Test Document"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
