# coding: utf-8

"""
    Akaris Travels Air

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 11.10.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import openapi_client
from openapi_client.models.product_query_build_from_products import ProductQueryBuildFromProducts  # noqa: E501
from openapi_client.rest import ApiException

class TestProductQueryBuildFromProducts(unittest.TestCase):
    """ProductQueryBuildFromProducts unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ProductQueryBuildFromProducts
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProductQueryBuildFromProducts`
        """
        model = openapi_client.models.product_query_build_from_products.ProductQueryBuildFromProducts()  # noqa: E501
        if include_optional :
            return ProductQueryBuildFromProducts(
                product_criteria_air = [
                    openapi_client.models.product_criteria_air.ProductCriteriaAir(
                        @type = 'ProductCriteriaAir', 
                        sequence = 1, 
                        specific_flight_criteria = [
                            openapi_client.models.specific_flight_criteria.SpecificFlightCriteria(
                                @type = 'SpecificFlightCriteria', 
                                carrier = 'BA', 
                                flight_number = '980', 
                                departure_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                departure_time = '1140', 
                                arrival_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                arrival_time = '1335', 
                                from = 'LHR', 
                                to = 'PAR', 
                                cabin = 'Economy', 
                                class_of_service = 'F', 
                                brand_tier = 2, 
                                segment_sequence = 1, 
                                availability_source_code = 'Z', 
                                content_source = 'GDS', 
                                bound_flights_ind = True, )
                            ], )
                    ], 
                passenger_criteria = [
                    openapi_client.models.passenger_criteria.PassengerCriteria(
                        @type = 'PassengerCriteria', 
                        number = 1, 
                        age = 26, 
                        passenger_type_code = 'ADT', 
                        customer_loyalty = [
                            openapi_client.models.customer_loyalty.CustomerLoyalty(
                                value = '132456', 
                                id = 'Loyalty_1', 
                                priority = 2, 
                                program_id = 'United', 
                                program_name = 'Mileage Plus', 
                                supplier_type = 'Airline', 
                                supplier = 'UA', 
                                tier = 'Silver', 
                                share_with_supplier = [
                                    'LH NH SQ'
                                    ], 
                                card_holder_name = 'John Smith', 
                                validated_ind = True, )
                            ], 
                        traveler_geographic_location = openapi_client.models.traveler_geographic_location.TravelerGeographicLocation(
                            value = 'PMI', 
                            traveler_geographic_location_type = 'City', 
                            resident_geographic_code = '', 
                            general_large_family_resident_discount_ind = True, 
                            special_large_family_resident_discount_ind = True, ), 
                        specified_passenger_type_code_only_ind = True, )
                    ]
            )
        else :
            return ProductQueryBuildFromProducts(
                product_criteria_air = [
                    openapi_client.models.product_criteria_air.ProductCriteriaAir(
                        @type = 'ProductCriteriaAir', 
                        sequence = 1, 
                        specific_flight_criteria = [
                            openapi_client.models.specific_flight_criteria.SpecificFlightCriteria(
                                @type = 'SpecificFlightCriteria', 
                                carrier = 'BA', 
                                flight_number = '980', 
                                departure_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                departure_time = '1140', 
                                arrival_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                arrival_time = '1335', 
                                from = 'LHR', 
                                to = 'PAR', 
                                cabin = 'Economy', 
                                class_of_service = 'F', 
                                brand_tier = 2, 
                                segment_sequence = 1, 
                                availability_source_code = 'Z', 
                                content_source = 'GDS', 
                                bound_flights_ind = True, )
                            ], )
                    ],
                passenger_criteria = [
                    openapi_client.models.passenger_criteria.PassengerCriteria(
                        @type = 'PassengerCriteria', 
                        number = 1, 
                        age = 26, 
                        passenger_type_code = 'ADT', 
                        customer_loyalty = [
                            openapi_client.models.customer_loyalty.CustomerLoyalty(
                                value = '132456', 
                                id = 'Loyalty_1', 
                                priority = 2, 
                                program_id = 'United', 
                                program_name = 'Mileage Plus', 
                                supplier_type = 'Airline', 
                                supplier = 'UA', 
                                tier = 'Silver', 
                                share_with_supplier = [
                                    'LH NH SQ'
                                    ], 
                                card_holder_name = 'John Smith', 
                                validated_ind = True, )
                            ], 
                        traveler_geographic_location = openapi_client.models.traveler_geographic_location.TravelerGeographicLocation(
                            value = 'PMI', 
                            traveler_geographic_location_type = 'City', 
                            resident_geographic_code = '', 
                            general_large_family_resident_discount_ind = True, 
                            special_large_family_resident_discount_ind = True, ), 
                        specified_passenger_type_code_only_ind = True, )
                    ],
        )
        """

    def testProductQueryBuildFromProducts(self):
        """Test ProductQueryBuildFromProducts"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
