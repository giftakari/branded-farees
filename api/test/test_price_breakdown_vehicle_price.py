# coding: utf-8

"""
    Akaris Travels Air

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 11.10.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import openapi_client
from openapi_client.models.price_breakdown_vehicle_price import PriceBreakdownVehiclePrice  # noqa: E501
from openapi_client.rest import ApiException

class TestPriceBreakdownVehiclePrice(unittest.TestCase):
    """PriceBreakdownVehiclePrice unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test PriceBreakdownVehiclePrice
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PriceBreakdownVehiclePrice`
        """
        model = openapi_client.models.price_breakdown_vehicle_price.PriceBreakdownVehiclePrice()  # noqa: E501
        if include_optional :
            return PriceBreakdownVehiclePrice(
                vehicle_price = openapi_client.models.vehicle_price.VehiclePrice(
                    @type = 'VehiclePrice', 
                    id = '', 
                    rate_source = '', 
                    rate_guaranteed_ind = True, 
                    rate_period = 'Hour', 
                    rate_distance = openapi_client.models.rate_distance.RateDistance(
                        value = 1.337, 
                        unlimited_distance_ind = True, 
                        requested_code_applied_ind = True, 
                        allowance = 56, 
                        distance_units = 'Miles', ), 
                    rate_description = [
                        openapi_client.models.text_block.TextBlock(
                            @type = 'TextBlockDetail', 
                            title = 'Baggage Details', 
                            id = '2', 
                            text_formatted = [
                                openapi_client.models.text_formatted.TextFormatted(
                                    value = 'Formatted text', 
                                    language = 'English', 
                                    text_format = 'PlainText', )
                                ], )
                        ], 
                    rate_availability = 'Available', 
                    supplier_rate = openapi_client.models.supplier_rate.SupplierRate(
                        @type = 'SupplierRate', 
                        base_rate = openapi_client.models.currency_amount.CurrencyAmount(
                            value = 124.56, 
                            code = 'USD', 
                            minor_unit = 2, 
                            currency_source = 'Supplier', 
                            approximate_ind = True, ), 
                        rate_for_period = openapi_client.models.currency_amount.CurrencyAmount(
                            value = 124.56, 
                            code = 'USD', 
                            minor_unit = 2, 
                            approximate_ind = True, ), 
                        drop_off_charge = , 
                        extra_mileage_charge = , 
                        estimated_total_amount = , ), 
                    approximate_rate = openapi_client.models.approximate_rate.ApproximateRate(
                        @type = 'ApproximateRate', ), 
                    customer_loyalty = openapi_client.models.customer_loyalty.CustomerLoyalty(
                        value = '132456', 
                        id = 'Loyalty_1', 
                        priority = 2, 
                        program_id = 'United', 
                        program_name = 'Mileage Plus', 
                        supplier_type = 'Airline', 
                        supplier = 'UA', 
                        tier = 'Silver', 
                        share_with_supplier = [
                            'LH NH SQ'
                            ], 
                        card_holder_name = 'John Smith', 
                        validated_ind = True, ), 
                    rate_qualifier = 'Other', ), 
                rate_guaranteed_ind = True
            )
        else :
            return PriceBreakdownVehiclePrice(
                vehicle_price = openapi_client.models.vehicle_price.VehiclePrice(
                    @type = 'VehiclePrice', 
                    id = '', 
                    rate_source = '', 
                    rate_guaranteed_ind = True, 
                    rate_period = 'Hour', 
                    rate_distance = openapi_client.models.rate_distance.RateDistance(
                        value = 1.337, 
                        unlimited_distance_ind = True, 
                        requested_code_applied_ind = True, 
                        allowance = 56, 
                        distance_units = 'Miles', ), 
                    rate_description = [
                        openapi_client.models.text_block.TextBlock(
                            @type = 'TextBlockDetail', 
                            title = 'Baggage Details', 
                            id = '2', 
                            text_formatted = [
                                openapi_client.models.text_formatted.TextFormatted(
                                    value = 'Formatted text', 
                                    language = 'English', 
                                    text_format = 'PlainText', )
                                ], )
                        ], 
                    rate_availability = 'Available', 
                    supplier_rate = openapi_client.models.supplier_rate.SupplierRate(
                        @type = 'SupplierRate', 
                        base_rate = openapi_client.models.currency_amount.CurrencyAmount(
                            value = 124.56, 
                            code = 'USD', 
                            minor_unit = 2, 
                            currency_source = 'Supplier', 
                            approximate_ind = True, ), 
                        rate_for_period = openapi_client.models.currency_amount.CurrencyAmount(
                            value = 124.56, 
                            code = 'USD', 
                            minor_unit = 2, 
                            approximate_ind = True, ), 
                        drop_off_charge = , 
                        extra_mileage_charge = , 
                        estimated_total_amount = , ), 
                    approximate_rate = openapi_client.models.approximate_rate.ApproximateRate(
                        @type = 'ApproximateRate', ), 
                    customer_loyalty = openapi_client.models.customer_loyalty.CustomerLoyalty(
                        value = '132456', 
                        id = 'Loyalty_1', 
                        priority = 2, 
                        program_id = 'United', 
                        program_name = 'Mileage Plus', 
                        supplier_type = 'Airline', 
                        supplier = 'UA', 
                        tier = 'Silver', 
                        share_with_supplier = [
                            'LH NH SQ'
                            ], 
                        card_holder_name = 'John Smith', 
                        validated_ind = True, ), 
                    rate_qualifier = 'Other', ),
        )
        """

    def testPriceBreakdownVehiclePrice(self):
        """Test PriceBreakdownVehiclePrice"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
