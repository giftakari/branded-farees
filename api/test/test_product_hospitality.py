# coding: utf-8

"""
    Akaris Travels Air

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 11.10.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import openapi_client
from openapi_client.models.product_hospitality import ProductHospitality  # noqa: E501
from openapi_client.rest import ApiException

class TestProductHospitality(unittest.TestCase):
    """ProductHospitality unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ProductHospitality
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProductHospitality`
        """
        model = openapi_client.models.product_hospitality.ProductHospitality()  # noqa: E501
        if include_optional :
            return ProductHospitality(
                booking_code = '', 
                guests = 56, 
                more_rates_token = '', 
                ada_compliant = 'Yes', 
                property_name = '', 
                property_key = openapi_client.models.property_key.PropertyKey(
                    @type = 'PropertyKey', 
                    chain_code = 'HL', 
                    property_code = '', ), 
                room_type = openapi_client.models.room_type.RoomType(
                    @type = 'RoomType', 
                    room_characteristics = openapi_client.models.room_characteristics.RoomCharacteristics(
                        @type = 'RoomCharacteristics', 
                        type_code = '', 
                        view_code = '8Q6', 
                        category = '8Q6', 
                        smoking_allowed = 'Yes', 
                        wifi_included = 'Yes', 
                        bed_configuration = [
                            openapi_client.models.bed_configuration.BedConfiguration(
                                quantity = 56, 
                                bed_type = '', 
                                size = '', )
                            ], 
                        non_smoking_ind = True, ), 
                    description = openapi_client.models.text_title_and_description.TextTitleAndDescription(
                        value = 'Ticket exchanged', 
                        languages = [
                            'English'
                            ], 
                        title = 'Group details.', ), 
                    room_amenity = [
                        openapi_client.models.room_amenity.RoomAmenity(
                            @type = 'RoomAmenity', 
                            description = 'WiFi', 
                            quantity = 0, 
                            name = '24 hour Room Service', 
                            inclusion = [
                                ''
                                ], 
                            included_ind = True, 
                            surcharge_ind = True, 
                            code = '8Q6', )
                        ], ), 
                date_range = openapi_client.models.date_range.DateRange(
                    start = 'Fri Mar 03 11:00:00 AEDT 2023', 
                    end = 'Fri Mar 03 11:00:00 AEDT 2023', )
            )
        else :
            return ProductHospitality(
                property_key = openapi_client.models.property_key.PropertyKey(
                    @type = 'PropertyKey', 
                    chain_code = 'HL', 
                    property_code = '', ),
        )
        """

    def testProductHospitality(self):
        """Test ProductHospitality"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
