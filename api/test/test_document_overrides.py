# coding: utf-8

"""
    Akaris Travels Air

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 11.10.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import openapi_client
from openapi_client.models.document_overrides import DocumentOverrides  # noqa: E501
from openapi_client.rest import ApiException

class TestDocumentOverrides(unittest.TestCase):
    """DocumentOverrides unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test DocumentOverrides
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DocumentOverrides`
        """
        model = openapi_client.models.document_overrides.DocumentOverrides()  # noqa: E501
        if include_optional :
            return DocumentOverrides(
                offer_identifier = openapi_client.models.offer_identifier.OfferIdentifier(
                    id = 'offer_1', 
                    offer_ref = 'offer_1', 
                    identifier = openapi_client.models.identifier.Identifier(
                        value = 'A0656EFF-FAF4-456F-B061-0161008D7C4E', 
                        authority = 'TVPT', ), ), 
                product_identifier = openapi_client.models.product_identifier.ProductIdentifier(
                    id = 'product_1', 
                    product_ref = 'product_1', 
                    identifier = openapi_client.models.identifier.Identifier(
                        value = 'A0656EFF-FAF4-456F-B061-0161008D7C4E', 
                        authority = 'TVPT', ), ), 
                commissions = [
                    openapi_client.models.commissions.Commissions(
                        @type = 'Commissions', 
                        traveler_identifier_ref = [
                            openapi_client.models.traveler_identifier_ref.TravelerIdentifierRef(
                                name = '', 
                                passenger_type_code = 'ADT', )
                            ], 
                        commission = openapi_client.models.commission.Commission(
                            @type = 'Commission', 
                            application = 'Full', ), 
                        apply_to = 'Base', )
                    ], 
                destination_purpose = [
                    openapi_client.models.destination_purpose.DestinationPurpose(
                        @type = 'DestinationPurpose', 
                        destination = 'United States of America', 
                        purpose = 'Business', )
                    ], 
                restrictions = [
                    openapi_client.models.restrictions.Restrictions(
                        @type = 'Restrictions', 
                        traveler_identifier_ref = [
                            openapi_client.models.traveler_identifier_ref.TravelerIdentifierRef(
                                name = '', 
                                passenger_type_code = 'ADT', )
                            ], 
                        restriction = [
                            ''
                            ], 
                        document_type = 'Ticket', )
                    ], 
                tour_codes = [
                    openapi_client.models.tour_codes.TourCodes(
                        @type = 'TourCodes', 
                        traveler_identifier_ref = [
                            openapi_client.models.traveler_identifier_ref.TravelerIdentifierRef(
                                name = '', 
                                passenger_type_code = 'ADT', )
                            ], 
                        tour_code = openapi_client.models.tour_code.TourCode(
                            value = '', 
                            tour_code_type = 'Bulk Tour', ), )
                    ], 
                change_fee_collection_method = openapi_client.models.change_fee_collection_method.ChangeFeeCollectionMethod(
                    value = openapi_client.models.change_fee_method_enum.ChangeFeeMethodEnum(), 
                    code = 'f2142', 
                    sub_code = '631b', 
                    description = 'Change fee collection method', 
                    change_fee_issued_separately_ind = True, 
                    tax_included_in_base_amount_ind = True, ), 
                net_remit_info = openapi_client.models.net_remit_info.NetRemitInfo(
                    @type = 'NetRemitInfo', 
                    car_code = 'ACAR', 
                    value_code = 'D1000', 
                    actual_selling_fare = 100.5, 
                    net_base_amount = openapi_client.models.filed_amount.FiledAmount(
                        value = 43.3422, 
                        currency_code = 'USD', 
                        code_authority = 'Australian Dollar', 
                        decimal_place = 3, 
                        decimal_authority = 'ISO 4217', ), )
            )
        else :
            return DocumentOverrides(
        )
        """

    def testDocumentOverrides(self):
        """Test DocumentOverrides"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
