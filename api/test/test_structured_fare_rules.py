# coding: utf-8

"""
    Akaris Travels Air

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 11.10.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import openapi_client
from openapi_client.models.structured_fare_rules import StructuredFareRules  # noqa: E501
from openapi_client.rest import ApiException

class TestStructuredFareRules(unittest.TestCase):
    """StructuredFareRules unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test StructuredFareRules
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `StructuredFareRules`
        """
        model = openapi_client.models.structured_fare_rules.StructuredFareRules()  # noqa: E501
        if include_optional :
            return StructuredFareRules(
                type = 'StructuredFareRules', 
                passenger_type_codes = [
                    '["CHD","ADT","UMNR"]'
                    ], 
                penalties = [
                    openapi_client.models.penalties.Penalties(
                        @type = 'Penalties', 
                        change = [
                            openapi_client.models.change.Change(
                                @type = 'ChangePermitted', 
                                product_refs = ["baloon","food","accesories"], 
                                segment_sequence = [34,56,678,2], )
                            ], 
                        cancel = [
                            openapi_client.models.cancel.Cancel(
                                @type = 'CancelPermitted', 
                                product_refs = ["baloon","food","accesories"], 
                                segment_sequence = [34,56,678,2], )
                            ], 
                        waiver = [
                            'TicketUpgrade'
                            ], 
                        penalty_source_code = openapi_client.models.penalty_source_code.PenaltySourceCode(
                            value = 'Properties of the penalty', 
                            code_context = 'The context of the penalty source', ), 
                        passenger_type_codes = ["CHD","UMNR","CNN"], 
                        involuntary_ind = True, )
                    ], 
                minimum_stay = [
                    openapi_client.models.minimum_stay.MinimumStay(
                        @type = 'MinimumStayApplies', )
                    ], 
                maximum_stay = [
                    openapi_client.models.maximum_stay.MaximumStay(
                        @type = 'MaximumStayApplies', )
                    ], 
                advance_reservation = [
                    openapi_client.models.advance_reservation.AdvanceReservation(
                        @type = 'AdvanceReservationRequired', )
                    ], 
                advance_payment = [
                    openapi_client.models.advance_payment.AdvancePayment(
                        @type = 'AdvancePayment', )
                    ], 
                stopover = [
                    openapi_client.models.stopover.Stopover(
                        @type = 'StopoverPermitted', )
                    ]
            )
        else :
            return StructuredFareRules(
        )
        """

    def testStructuredFareRules(self):
        """Test StructuredFareRules"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
