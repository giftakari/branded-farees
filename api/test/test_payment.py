# coding: utf-8

"""
    Akaris Travels Air

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 11.10.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import openapi_client
from openapi_client.models.payment import Payment  # noqa: E501
from openapi_client.rest import ApiException

class TestPayment(unittest.TestCase):
    """Payment unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Payment
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Payment`
        """
        model = openapi_client.models.payment.Payment()  # noqa: E501
        if include_optional :
            return Payment(
                amount = openapi_client.models.currency_amount.CurrencyAmount(
                    value = 124.56, 
                    code = 'USD', 
                    minor_unit = 2, 
                    currency_source = 'Supplier', 
                    approximate_ind = True, ), 
                form_of_payment_identifier = openapi_client.models.form_of_payment_identifier.FormOfPaymentIdentifier(
                    @type = 'FormOfPaymentPaymentCash', 
                    id = '', 
                    form_of_payment_ref = '', 
                    identifier = openapi_client.models.identifier.Identifier(
                        value = 'A0656EFF-FAF4-456F-B061-0161008D7C4E', 
                        authority = 'TVPT', ), ), 
                offer_identifier = [
                    openapi_client.models.offer_identifier.OfferIdentifier(
                        id = 'offer_1', 
                        offer_ref = 'offer_1', 
                        identifier = openapi_client.models.identifier.Identifier(
                            value = 'A0656EFF-FAF4-456F-B061-0161008D7C4E', 
                            authority = 'TVPT', ), )
                    ], 
                fees = openapi_client.models.fees.Fees(
                    @type = 'FeesDetail', 
                    total_fees = 111.11, ), 
                taxes = openapi_client.models.taxes.Taxes(
                    @type = 'TaxesDetail', 
                    total_taxes = 330.1, 
                    tax_info = [
                        openapi_client.models.tax_info.TaxInfo(
                            tax_code = 'XF', 
                            currency_code = openapi_client.models.currency_code.CurrencyCode(
                                value = 'USD', 
                                code_authority = 'ISO 4217', 
                                decimal_place = 4, 
                                decimal_authority = 'ISO 4217', ), 
                            amount = 1.337, 
                            tax_breakdown = [
                                openapi_client.models.tax_breakdown.TaxBreakdown(
                                    airport_code = 'MIA', 
                                    amount = 1.337, )
                                ], )
                        ], ), 
                traveler_identifier_ref = [
                    openapi_client.models.traveler_identifier_ref.TravelerIdentifierRef(
                        name = '', 
                        passenger_type_code = 'ADT', )
                    ], 
                base_amount = openapi_client.models.currency_amount.CurrencyAmount(
                    value = 124.56, 
                    code = 'USD', 
                    minor_unit = 2, 
                    currency_source = 'Supplier', 
                    approximate_ind = True, ), 
                deposit_ind = True, 
                extended_payment = openapi_client.models.extended_payment.ExtendedPayment(
                    number_of_installments = 6, 
                    first_installment = 100, 
                    remaining_amount = 50, 
                    otato_code = '', ), 
                agency_service_fee_identifier = [
                    openapi_client.models.agency_service_fee_identifier.AgencyServiceFeeIdentifier(
                        id = '', )
                    ], 
                guarantee_ind = True
            )
        else :
            return Payment(
                amount = openapi_client.models.currency_amount.CurrencyAmount(
                    value = 124.56, 
                    code = 'USD', 
                    minor_unit = 2, 
                    currency_source = 'Supplier', 
                    approximate_ind = True, ),
        )
        """

    def testPayment(self):
        """Test Payment"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
