# coding: utf-8

"""
    Akaris Travels Air

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 11.10.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import openapi_client
from openapi_client.models.vehicle import Vehicle  # noqa: E501
from openapi_client.rest import ApiException

class TestVehicle(unittest.TestCase):
    """Vehicle unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Vehicle
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Vehicle`
        """
        model = openapi_client.models.vehicle.Vehicle()  # noqa: E501
        if include_optional :
            return Vehicle(
                type = 'Vehicle', 
                baggage_quantity = 56, 
                passenger_quantity = '5/7', 
                door_count = '', 
                image = openapi_client.models.image.Image(
                    value = '', 
                    dimension_category = '', 
                    width = 42, 
                    height = 43, 
                    caption = 'Ticket', 
                    picture_category = 5, 
                    image_size = 'Large', 
                    picture_of = 'Lobby', ), 
                vehicle_make_model = openapi_client.models.vehicle_make_model.VehicleMakeModel(
                    value = '', 
                    code = '', 
                    supplier_reference = '', 
                    vendor_code = '', 
                    operating_supplier_code = '', 
                    operating_supplier_name = '', ), 
                transmission_type_code = openapi_client.models.code.Code(
                    value = 'INS', 
                    code_context = 'infant with a seat', ), 
                vehicle_category_code = openapi_client.models.code.Code(
                    value = 'INS', 
                    code_context = 'infant with a seat', ), 
                fuel_type_code = openapi_client.models.code.Code(
                    value = 'INS', 
                    code_context = 'infant with a seat', ), 
                vehicle_size_code = openapi_client.models.code.Code(
                    value = 'INS', 
                    code_context = 'infant with a seat', ), 
                vehicle_class_code = openapi_client.models.code.Code(
                    value = 'INS', 
                    code_context = 'infant with a seat', ), 
                air_conditioning_ind = True
            )
        else :
            return Vehicle(
                type = 'Vehicle',
        )
        """

    def testVehicle(self):
        """Test Vehicle"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
