# coding: utf-8

"""
    Akaris Travels Air

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 11.10.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import openapi_client
from openapi_client.models.reservation_build_vehicle import ReservationBuildVehicle  # noqa: E501
from openapi_client.rest import ApiException

class TestReservationBuildVehicle(unittest.TestCase):
    """ReservationBuildVehicle unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ReservationBuildVehicle
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReservationBuildVehicle`
        """
        model = openapi_client.models.reservation_build_vehicle.ReservationBuildVehicle()  # noqa: E501
        if include_optional :
            return ReservationBuildVehicle(
                vehicle_travel_criteria = openapi_client.models.vehicle_travel_criteria.VehicleTravelCriteria(
                    @type = 'VehicleTravelCriteria', 
                    currency_code = 'USD', 
                    rate_category = 'All', 
                    rate_period = 'Hour', 
                    unlimited_mileage_ind = True, 
                    rate_guaranteed_ind = True, 
                    vehicle_date_location = openapi_client.models.vehicle_date_location.VehicleDateLocation(
                        @type = 'VehicleDateLocation', 
                        rental_pickup = openapi_client.models.rental_pickup_return.RentalPickupReturn(
                            @type = 'RentalPickUpReturn', 
                            date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            time = 'HH.MM.SS', 
                            vendor_location = openapi_client.models.vendor_location.VendorLocation(
                                @type = 'VehicleLocation', 
                                rental_location_number = 'u2LC4', 
                                vendor_code = '', 
                                rental_location_name = 'Heathrow International Arrivals Hall T2', 
                                code = 'LHRT01', 
                                address = openapi_client.models.address.Address(
                                    @type = 'AddressDetail', 
                                    id = 'Address_1', 
                                    bldg_room = openapi_client.models.address_bldg_room.AddressBldgRoom(
                                        value = 'Moore House, Room 101, 23 ABC Street, Windsor, Berkshire, United Kingdom, SL6 51A', 
                                        bulding_ind = True, ), 
                                    number = openapi_client.models.address_street_number.AddressStreetNumber(
                                        value = '23B ABC Street, Windsor, Berkshire, United Kingdom, SL6 51A', 
                                        street_nmbr_suffix = 'B', 
                                        street_direction = 'NW', 
                                        rural_route_nmbr = '76', 
                                        po_box = '1001', ), 
                                    street = 'ABC Street', 
                                    address_line = S Havana,Opposite to USPS, 
                                    city = 'Windsor', 
                                    county = 'Berkshire', 
                                    state_prov = openapi_client.models.state_prov.StateProv(
                                        value = 'CA', 
                                        name = 'California', ), 
                                    country = openapi_client.models.country.Country(
                                        value = 'USA', 
                                        id = '23', 
                                        name = 'United States', 
                                        code_context = 'IATA', ), 
                                    postal_code = 'Sl6 1AB', 
                                    addressee = '', 
                                    role = 'Delivery', ), 
                                telephone = [
                                    openapi_client.models.telephone.Telephone(
                                        @type = 'Telephone', 
                                        country_access_code = '1', 
                                        area_city_code = '972', 
                                        phone_number = '972-000-787', 
                                        extension = '234', 
                                        id = '3', 
                                        city_code = 'DEN', )
                                    ], 
                                description = '', 
                                operation_times = [
                                    openapi_client.models.operation_times.OperationTimes(
                                        @type = 'OperationTimes', 
                                        days_of_week = [
                                            'Sunday'
                                            ], 
                                        open_time = '45900', 
                                        close_time = '06:00:00', )
                                    ], 
                                directions = '', 
                                additional_instructions = '', 
                                shuttle_service = '', 
                                rental_location_code = openapi_client.models.code.Code(
                                    value = 'INS', 
                                    code_context = 'infant with a seat', ), 
                                counter_location_code = openapi_client.models.code.Code(
                                    value = 'INS', 
                                    code_context = 'infant with a seat', ), ), ), 
                        rental_return = openapi_client.models.rental_pickup_return.RentalPickupReturn(
                            @type = 'RentalPickUpReturn', 
                            date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            time = 'HH.MM.SS', ), ), 
                    booking_source = , 
                    driver_info = openapi_client.models.driver_info.DriverInfo(
                        age = 56, 
                        country_of_doc_issue = 'AE', ), 
                    permitted_vendors = openapi_client.models.permitted_vendors.PermittedVendors(
                        vendor = [
                            openapi_client.models.company_name.CompanyName(
                                value = '', 
                                id = '2', 
                                division = 'Travel Division', 
                                department = 'Adventure department', 
                                short_name = 'Aventure Inc', 
                                code = 'AI', 
                                code_context = 'internal', 
                                system_of_record = [
                                    '["1G","1V","MB","HZ"]'
                                    ], )
                            ], ), 
                    prohibited_vendors = openapi_client.models.prohibited_vendors.ProhibitedVendors(
                        vendor = [
                            openapi_client.models.company_name.CompanyName(
                                value = '', 
                                id = '2', 
                                division = 'Travel Division', 
                                department = 'Adventure department', 
                                short_name = 'Aventure Inc', 
                                code = 'AI', 
                                code_context = 'internal', )
                            ], ), 
                    rate_code_info = [
                        openapi_client.models.rate_code_info.RateCodeInfo(
                            value = 'Rio', 
                            rate_name = 'Special', 
                            rate_id = '2345', )
                        ], 
                    customer_loyalty = [
                        openapi_client.models.customer_loyalty.CustomerLoyalty(
                            value = '132456', 
                            id = 'Loyalty_1', 
                            priority = 2, 
                            program_id = 'United', 
                            program_name = 'Mileage Plus', 
                            supplier_type = 'Airline', 
                            supplier = 'UA', 
                            tier = 'Silver', 
                            share_with_supplier = [
                                'LH NH SQ'
                                ], 
                            card_holder_name = 'John Smith', 
                            validated_ind = True, )
                        ], 
                    special_equipment = [
                        openapi_client.models.special_equipment.SpecialEquipment(
                            value = '', 
                            quantity = 1, 
                            equipment_type_code = '', 
                            code_context = 'Acriss', )
                        ], 
                    vehicle_search_modifiers = openapi_client.models.vehicle_search_modifiers.VehicleSearchModifiers(
                        @type = 'VehicleSearchModifiers', 
                        available_rates_only_ind = True, 
                        sellable_rates_only_ind = True, ), 
                    search_vehicle_attributes = openapi_client.models.search_vehicle_attributes.SearchVehicleAttributes(
                        transmission_type_code = , 
                        vehicle_category_code = , 
                        fuel_type_code = , 
                        vehicle_size_code = , 
                        door_count = '', 
                        air_conditioning_ind = True, ), 
                    vehicle_make_model = [
                        openapi_client.models.vehicle_make_model.VehicleMakeModel(
                            value = '', 
                            code = '', 
                            supplier_reference = '', 
                            vendor_code = '', 
                            operating_supplier_code = '', 
                            operating_supplier_name = '', )
                        ], 
                    next_result_reference = openapi_client.models.next_result_reference.NextResultReference(
                        value = '', 
                        provider_code = 'Cu2L01', ), ), 
                arrival_details = openapi_client.models.arrival_details.ArrivalDetails(
                    @type = 'ArrivalDetails', 
                    carrier = 'Legacy carrier', 
                    flight_number = 'BA2491A', 
                    transportation_code = 'Bicycle', )
            )
        else :
            return ReservationBuildVehicle(
        )
        """

    def testReservationBuildVehicle(self):
        """Test ReservationBuildVehicle"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
