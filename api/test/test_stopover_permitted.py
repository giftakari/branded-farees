# coding: utf-8

"""
    Akaris Travels Air

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 11.10.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import openapi_client
from openapi_client.models.stopover_permitted import StopoverPermitted  # noqa: E501
from openapi_client.rest import ApiException

class TestStopoverPermitted(unittest.TestCase):
    """StopoverPermitted unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test StopoverPermitted
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `StopoverPermitted`
        """
        model = openapi_client.models.stopover_permitted.StopoverPermitted()  # noqa: E501
        if include_optional :
            return StopoverPermitted(
                journey_types = [
                    'OpenJaw'
                    ], 
                minimum_duration = '1 hour', 
                maximum_duration = '12 hours', 
                minimum = 3, 
                maximum = 5, 
                outbound = 2, 
                inbound = 3, 
                stopover_charge = [
                    openapi_client.models.stopover_charge.StopoverCharge(
                        @type = 'StopoverCharge', 
                        id = '125', 
                        quantity = 2, 
                        amount = openapi_client.models.currency_amount.CurrencyAmount(
                            value = 124.56, 
                            code = 'USD', 
                            minor_unit = 2, 
                            currency_source = 'Supplier', 
                            approximate_ind = True, ), 
                        alternative_amount = openapi_client.models.currency_amount.CurrencyAmount(
                            value = 124.56, 
                            code = 'USD', 
                            minor_unit = 2, 
                            approximate_ind = True, ), )
                    ], 
                stopover_restriction = [
                    openapi_client.models.stopover_restriction.StopoverRestriction(
                        @type = 'StopoverRestrictions', 
                        stopover_charge_ref = 'Reference1', 
                        journey_types = [
                            'OpenJaw'
                            ], 
                        departure_carrier = 'XPE', 
                        arrival_airline = 'AEH', 
                        geographic_restriction = ["Airport","City","Country","StateProvince","Zone"], 
                        online_stopover_only_ind = True, )
                    ], 
                permitted_at_gateway_only_ind = True
            )
        else :
            return StopoverPermitted(
                minimum_duration = '1 hour',
                maximum_duration = '12 hours',
                minimum = 3,
                maximum = 5,
                stopover_charge = [
                    openapi_client.models.stopover_charge.StopoverCharge(
                        @type = 'StopoverCharge', 
                        id = '125', 
                        quantity = 2, 
                        amount = openapi_client.models.currency_amount.CurrencyAmount(
                            value = 124.56, 
                            code = 'USD', 
                            minor_unit = 2, 
                            currency_source = 'Supplier', 
                            approximate_ind = True, ), 
                        alternative_amount = openapi_client.models.currency_amount.CurrencyAmount(
                            value = 124.56, 
                            code = 'USD', 
                            minor_unit = 2, 
                            approximate_ind = True, ), )
                    ],
        )
        """

    def testStopoverPermitted(self):
        """Test StopoverPermitted"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
