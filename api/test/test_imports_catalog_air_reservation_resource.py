# coding: utf-8

"""
    Akaris Travels Air

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 11.10.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import openapi_client
from openapi_client.models.imports_catalog_air_reservation_resource import ImportsCatalogAirReservationResource  # noqa: E501
from openapi_client.rest import ApiException

class TestImportsCatalogAirReservationResource(unittest.TestCase):
    """ImportsCatalogAirReservationResource unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ImportsCatalogAirReservationResource
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ImportsCatalogAirReservationResource`
        """
        model = openapi_client.models.imports_catalog_air_reservation_resource.ImportsCatalogAirReservationResource()  # noqa: E501
        if include_optional :
            return ImportsCatalogAirReservationResource(
                type = 'BaggageAllowance', 
                id = 'product_1', 
                terms_and_conditions_ref = 'TC_1', 
                identifier = openapi_client.models.identifier.Identifier(
                    value = 'A0656EFF-FAF4-456F-B061-0161008D7C4E', 
                    authority = 'TVPT', ), 
                expiry_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                customer_loyalty = [
                    openapi_client.models.customer_loyalty.CustomerLoyalty(
                        value = '132456', 
                        id = 'Loyalty_1', 
                        priority = 2, 
                        program_id = 'United', 
                        program_name = 'Mileage Plus', 
                        supplier_type = 'Airline', 
                        supplier = 'UA', 
                        tier = 'Silver', 
                        share_with_supplier = [
                            'LH NH SQ'
                            ], 
                        card_holder_name = 'John Smith', 
                        validated_ind = True, )
                    ], 
                text_block = [
                    openapi_client.models.text_block.TextBlock(
                        @type = 'TextBlockDetail', 
                        title = 'Baggage Details', 
                        id = '2', 
                        text_formatted = [
                            openapi_client.models.text_formatted.TextFormatted(
                                value = 'Formatted text', 
                                language = 'English', 
                                text_format = 'PlainText', )
                            ], )
                    ], 
                baggage_allowance = [
                    openapi_client.models.baggage_allowance.BaggageAllowance(
                        @type = 'BaggageAllowance', 
                        passenger_type_codes = [
                            '["CHD","ADT","INF"]'
                            ], 
                        baggage_type = 'CarryOn', 
                        product_ref = ["baloon","vase","pillow"], 
                        baggage_item = [
                            openapi_client.models.baggage_item.BaggageItem(
                                @type = 'BaggageItem', 
                                quantity = 2, 
                                measurement = [
                                    openapi_client.models.measurement.Measurement(
                                        value = 2.22, 
                                        measurement_type = 'Width', 
                                        unit = 'Miles', )
                                    ], 
                                baggage_fee = openapi_client.models.currency_amount.CurrencyAmount(
                                    value = 124.56, 
                                    code = 'USD', 
                                    minor_unit = 2, 
                                    currency_source = 'Supplier', 
                                    approximate_ind = True, ), 
                                text = 'The payment was correct', )
                            ], 
                        segment_sequence_list = [12,45,3,2], 
                        text = Blue baggage and purple allowed, )
                    ], 
                fare_rule_identifier_ref = openapi_client.models.identifier_ref.IdentifierRef(
                    value = '', 
                    id = '', 
                    description = '', 
                    uris = [
                        'google.com'
                        ], ), 
                restriction = [
                    openapi_client.models.restriction.Restriction(
                        value = 'No late arrivals', 
                        segment_sequence_list = [2,4,6,8,10], 
                        product_ref = ["p1","p2","p3","p4"], )
                    ], 
                organization_information = openapi_client.models.organization_information.OrganizationInformation(
                    @type = 'OrganizationInformation', 
                    organization_identifier = [
                        openapi_client.models.organization_identifier.OrganizationIdentifier(
                            value = 'JBD123456', 
                            supplier = 'AA', 
                            organization_code_type = 'Account', 
                            segment_sequence_list = [1,2,3], 
                            product_ref = ["product_1","product_2"], 
                            account_code_fares_only_ind = True, )
                        ], 
                    gst_registration_number = [
                        openapi_client.models.gst_registration_number.GSTRegistrationNumber(
                            value = '07AAGFF2194N1Z1', 
                            telephone = '222-222-222', 
                            address = '1122 sample trail, CO, USA, 21232', 
                            country = 'India', 
                            company_name = 'American Airlines', 
                            email = 'sample@aa.com', )
                        ], ), 
                validating_airline = [
                    openapi_client.models.validating_airline.ValidatingAirline(
                        @type = 'ValidatingAirline', 
                        segment_sequence_list = ["segment1","segment2","segment3"], 
                        validating_airline = 'QA', 
                        product_ref = ["product1","product2","product3"], )
                    ], 
                baggage_recheck = [
                    openapi_client.models.baggage_recheck.BaggageRecheck(
                        @type = 'BaggageRecheck', 
                        at = 'MEX', 
                        arrival_flight = openapi_client.models.flight_id.FlightID(
                            @type = 'FlightDetail', 
                            id = '126', 
                            flight_ref = 'pln0845', 
                            identifier = openapi_client.models.identifier.Identifier(
                                value = 'A0656EFF-FAF4-456F-B061-0161008D7C4E', 
                                authority = 'TVPT', ), ), 
                        departure_flight = openapi_client.models.flight_id.FlightID(
                            @type = 'FlightDetail', 
                            id = '126', 
                            flight_ref = 'pln0845', ), )
                    ], 
                ticketing_agency = [
                    openapi_client.models.ticketing_agency.TicketingAgency(
                        @type = 'TicketingAgency', 
                        code = 'A561510', 
                        product_ref = ["p1","p2","p3"], 
                        segment_sequence_list = [31,28,43,42,51,26], )
                    ], 
                payment_time_limit = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                promotional_code = openapi_client.models.promotional_code.PromotionalCode(
                    value = 'CDFRT', 
                    supplier_code = 'AA', ), 
                penalties = [
                    openapi_client.models.penalties.Penalties(
                        @type = 'Penalties', 
                        change = [
                            openapi_client.models.change.Change(
                                @type = 'ChangePermitted', 
                                product_refs = ["baloon","food","accesories"], 
                                segment_sequence = [34,56,678,2], )
                            ], 
                        cancel = [
                            openapi_client.models.cancel.Cancel(
                                @type = 'CancelPermitted', 
                                product_refs = ["baloon","food","accesories"], 
                                segment_sequence = [34,56,678,2], )
                            ], 
                        waiver = [
                            'TicketUpgrade'
                            ], 
                        penalty_source_code = openapi_client.models.penalty_source_code.PenaltySourceCode(
                            value = 'Properties of the penalty', 
                            code_context = 'The context of the penalty source', ), 
                        passenger_type_codes = ["CHD","UMNR","CNN"], 
                        involuntary_ind = True, )
                    ], 
                fare_guarantee_policy = [
                    openapi_client.models.fare_guarantee_policy.FareGuaranteePolicy(
                        @type = 'FareGuaranteePolicy', 
                        passenger_type_codes = [
                            '["CHD","UMNR","CNN"]'
                            ], 
                        eligiblefor_adm_review = 'Yes', 
                        code = openapi_client.models.code.Code(
                            value = 'INS', 
                            code_context = 'infant with a seat', ), )
                    ], 
                pricing_agency = [
                    openapi_client.models.pricing_agency.PricingAgency(
                        @type = '', 
                        product_ref = [
                            ''
                            ], 
                        code = 'Cu2LC4a01', 
                        segment_sequence_list = [
                            56
                            ], )
                    ], 
                instant_purchase_ind = True, 
                secure_flight_passenger_data_required_ind = True, 
                tour_codes = [
                    openapi_client.models.tour_codes.TourCodes(
                        @type = 'TourCodes', 
                        traveler_identifier_ref = [
                            openapi_client.models.traveler_identifier_ref.TravelerIdentifierRef(
                                name = '', 
                                passenger_type_code = 'ADT', )
                            ], 
                        tour_code = openapi_client.models.tour_code.TourCode(
                            value = '', 
                            tour_code_type = 'Bulk Tour', ), )
                    ], 
                document_valid_date_range = openapi_client.models.document_valid_date_range.DocumentValidDateRange(
                    @type = 'DocumentValidDateRange', 
                    product_ref = [
                        openapi_client.models.product_identifier.ProductIdentifier(
                            id = 'product_1', 
                            product_ref = 'product_1', 
                            identifier = openapi_client.models.identifier.Identifier(
                                value = 'A0656EFF-FAF4-456F-B061-0161008D7C4E', 
                                authority = 'TVPT', ), )
                        ], 
                    segment_sequence_list = [
                        56
                        ], 
                    valid_date_range = openapi_client.models.date_range.DateRange(
                        start = 'Fri Mar 03 11:00:00 AEDT 2023', 
                        end = 'Fri Mar 03 11:00:00 AEDT 2023', ), ), 
                product_ref = 'product_1', 
                quantity = 2, 
                total_duration = '3245', 
                flight_segment = [
                    openapi_client.models.flight_segment.FlightSegment(
                        @type = 'FlightSegment', 
                        id = '2304', 
                        sequence = 65, 
                        connection_duration = '60', 
                        flight = openapi_client.models.flight_id.FlightID(
                            @type = 'FlightDetail', 
                            id = '126', 
                            flight_ref = 'pln0845', 
                            identifier = openapi_client.models.identifier.Identifier(
                                value = 'A0656EFF-FAF4-456F-B061-0161008D7C4E', 
                                authority = 'TVPT', ), ), 
                        operational_status = openapi_client.models.operational_status_enum.OperationalStatusENUM(
                            value = 'FlightBoarding', ), 
                        bound_flights_ind = True, 
                        co2_actual = openapi_client.models.measurement.Measurement(
                            measurement_type = 'Width', 
                            unit = 'Miles', ), )
                    ], 
                passenger_flight = [
                    openapi_client.models.passenger_flight.PassengerFlight(
                        @type = 'PassengerFlight', 
                        passenger_quantity = 416, 
                        passenger_type_code = 'ADT', 
                        flight_product = [
                            openapi_client.models.flight_product.FlightProduct(
                                @type = 'FlightProduct', 
                                segment_sequence = [23,45,67,89], 
                                class_of_service = 'F', 
                                cabin = 'Economy', 
                                fare_basis_code = 'HKG  SU  X/MOW  SU  KGD  598.78', 
                                fare_type = 'PublicFare', 
                                car_code = 'P1234', 
                                value_code = '365', 
                                brand = openapi_client.models.brand_id.BrandID(
                                    @type = 'BrandID', 
                                    id = '', 
                                    brand_ref = '', 
                                    identifier = openapi_client.models.identifier.Identifier(
                                        value = 'A0656EFF-FAF4-456F-B061-0161008D7C4E', 
                                        authority = 'TVPT', ), ), 
                                customer_loyalty_credit = [
                                    openapi_client.models.customer_loyalty_credit.CustomerLoyaltyCredit(
                                        @type = 'CustomerLoyaltyCredit', 
                                        customer_loyalty = openapi_client.models.customer_loyalty.CustomerLoyalty(
                                            value = '132456', 
                                            id = 'Loyalty_1', 
                                            priority = 2, 
                                            program_id = 'United', 
                                            program_name = 'Mileage Plus', 
                                            supplier_type = 'Airline', 
                                            supplier = 'UA', 
                                            tier = 'Silver', 
                                            share_with_supplier = [
                                                'LH NH SQ'
                                                ], 
                                            card_holder_name = 'John Smith', 
                                            validated_ind = True, ), 
                                        earned = '500', 
                                        status = 'gold', )
                                    ], 
                                class_of_service_availability = [
                                    openapi_client.models.class_of_service_availability.ClassOfServiceAvailability(
                                        value = 'F', 
                                        number = 2, 
                                        status = openapi_client.models.availability_status_enum.AvailabilityStatusENUM(
                                            value = 'Available', ), )
                                    ], 
                                fare_qualifier = openapi_client.models.fare_qualifier_enum.FareQualifierENUM(), 
                                stopover_priced = 'Yes', 
                                ticket_designator = 'BB5662Y', 
                                fare_type_code = 'ERU', )
                            ], )
                    ], 
                amount = openapi_client.models.amount.Amount(
                    @type = 'Amount', 
                    currency_source = 'Supplier', 
                    currency_code = openapi_client.models.currency_code.CurrencyCode(
                        value = 'USD', 
                        code_authority = 'ISO 4217', 
                        decimal_place = 4, 
                        decimal_authority = 'ISO 4217', ), 
                    base = 120.2, 
                    taxes = openapi_client.models.taxes.Taxes(
                        @type = 'TaxesDetail', 
                        total_taxes = 330.1, 
                        tax_info = [
                            openapi_client.models.tax_info.TaxInfo(
                                tax_code = 'XF', 
                                amount = 1.337, 
                                tax_breakdown = [
                                    openapi_client.models.tax_breakdown.TaxBreakdown(
                                        airport_code = 'MIA', )
                                    ], )
                            ], ), 
                    fees = openapi_client.models.fees.Fees(
                        @type = 'FeesDetail', 
                        total_fees = 111.11, ), 
                    total = 30.13, 
                    approximate_ind = True, ), 
                commission = openapi_client.models.commission.Commission(
                    @type = 'Commission', 
                    application = 'Full', ), 
                quantity = 23, 
                requested_passenger_type = 'CHD', 
                filed_amount = openapi_client.models.filed_amount.FiledAmount(
                    value = 43.3422, 
                    currency_code = 'USD', 
                    code_authority = 'Australian Dollar', 
                    decimal_place = 3, 
                    decimal_authority = 'ISO 4217', ), 
                discount = openapi_client.models.discount.Discount(
                    value = 20.22, 
                    description = 'Spring discount on group bookings', 
                    currency_code = 'USD', 
                    code_authority = 'ISO', 
                    decimal_place = 2, 
                    decimal_authority = 'ISO', ), 
                net_fare_info = openapi_client.models.net_fare_info.NetFareInfo(
                    passenger_type_code = 'Cu2LC012', 
                    net_fare_breakdown_construction = [
                        openapi_client.models.net_fare_breakdown_construction.NetFareBreakdownConstruction(
                            value = '', 
                            fare_type = '', 
                            rate_of_exchange = 1.337, )
                        ], 
                    ticket_base_audit = openapi_client.models.filed_amount.FiledAmount(
                        value = 43.3422, 
                        currency_code = 'USD', 
                        code_authority = 'Australian Dollar', 
                        decimal_place = 3, 
                        decimal_authority = 'ISO 4217', ), 
                    ticket_base_passenger = openapi_client.models.ticket_base_passenger.TicketBasePassenger(
                        value = 1.337, 
                        currency_code = 'AEi', 
                        code_authority = '', 
                        decimal_place = 0, 
                        decimal_authority = '', 
                        b_t_ind = True, 
                        i_t_ind = True, ), ), 
                traveler_identifier_ref = openapi_client.models.traveler_identifier_ref.TravelerIdentifierRef(
                    name = '', 
                    passenger_type_code = 'ADT', ), 
                net_base_amount = openapi_client.models.filed_amount.FiledAmount(
                    value = 43.3422, 
                    currency_code = 'USD', 
                    code_authority = 'Australian Dollar', 
                    decimal_place = 3, 
                    decimal_authority = 'ISO 4217', ), 
                fare_calculation = 'LON BA SYD R564.00YEE1Y BA LON R564.00YEE1Y NUC1128.00END ROE0.787855', 
                surcharges = openapi_client.models.surcharges.Surcharges(
                    @type = 'SurchargesDetail', 
                    total_surcharges = 211.11, 
                    approximate_ind = False, ), 
                passenger_type_codes = [
                    '["CHD","ADT","INF"]'
                    ], 
                baggage_type = 'CarryOn', 
                product_ref = ["baloon","vase","pillow"], 
                baggage_item = [
                    openapi_client.models.baggage_item.BaggageItem(
                        @type = 'BaggageItem', 
                        quantity = 2, 
                        measurement = [
                            openapi_client.models.measurement.Measurement(
                                value = 2.22, 
                                measurement_type = 'Width', 
                                unit = 'Miles', )
                            ], 
                        baggage_fee = openapi_client.models.currency_amount.CurrencyAmount(
                            value = 124.56, 
                            code = 'USD', 
                            minor_unit = 2, 
                            currency_source = 'Supplier', 
                            approximate_ind = True, ), 
                        text = 'The payment was correct', )
                    ], 
                segment_sequence_list = [12,45,3,2], 
                text = Blue baggage and purple allowed, 
                url = 'https://airline/baggage'
            )
        else :
            return ImportsCatalogAirReservationResource(
                type = 'BaggageAllowance',
                flight_segment = [
                    openapi_client.models.flight_segment.FlightSegment(
                        @type = 'FlightSegment', 
                        id = '2304', 
                        sequence = 65, 
                        connection_duration = '60', 
                        flight = openapi_client.models.flight_id.FlightID(
                            @type = 'FlightDetail', 
                            id = '126', 
                            flight_ref = 'pln0845', 
                            identifier = openapi_client.models.identifier.Identifier(
                                value = 'A0656EFF-FAF4-456F-B061-0161008D7C4E', 
                                authority = 'TVPT', ), ), 
                        operational_status = openapi_client.models.operational_status_enum.OperationalStatusENUM(
                            value = 'FlightBoarding', ), 
                        bound_flights_ind = True, 
                        co2_actual = openapi_client.models.measurement.Measurement(
                            measurement_type = 'Width', 
                            unit = 'Miles', ), )
                    ],
                passenger_flight = [
                    openapi_client.models.passenger_flight.PassengerFlight(
                        @type = 'PassengerFlight', 
                        passenger_quantity = 416, 
                        passenger_type_code = 'ADT', 
                        flight_product = [
                            openapi_client.models.flight_product.FlightProduct(
                                @type = 'FlightProduct', 
                                segment_sequence = [23,45,67,89], 
                                class_of_service = 'F', 
                                cabin = 'Economy', 
                                fare_basis_code = 'HKG  SU  X/MOW  SU  KGD  598.78', 
                                fare_type = 'PublicFare', 
                                car_code = 'P1234', 
                                value_code = '365', 
                                brand = openapi_client.models.brand_id.BrandID(
                                    @type = 'BrandID', 
                                    id = '', 
                                    brand_ref = '', 
                                    identifier = openapi_client.models.identifier.Identifier(
                                        value = 'A0656EFF-FAF4-456F-B061-0161008D7C4E', 
                                        authority = 'TVPT', ), ), 
                                customer_loyalty_credit = [
                                    openapi_client.models.customer_loyalty_credit.CustomerLoyaltyCredit(
                                        @type = 'CustomerLoyaltyCredit', 
                                        customer_loyalty = openapi_client.models.customer_loyalty.CustomerLoyalty(
                                            value = '132456', 
                                            id = 'Loyalty_1', 
                                            priority = 2, 
                                            program_id = 'United', 
                                            program_name = 'Mileage Plus', 
                                            supplier_type = 'Airline', 
                                            supplier = 'UA', 
                                            tier = 'Silver', 
                                            share_with_supplier = [
                                                'LH NH SQ'
                                                ], 
                                            card_holder_name = 'John Smith', 
                                            validated_ind = True, ), 
                                        earned = '500', 
                                        status = 'gold', )
                                    ], 
                                class_of_service_availability = [
                                    openapi_client.models.class_of_service_availability.ClassOfServiceAvailability(
                                        value = 'F', 
                                        number = 2, 
                                        status = openapi_client.models.availability_status_enum.AvailabilityStatusENUM(
                                            value = 'Available', ), )
                                    ], 
                                fare_qualifier = openapi_client.models.fare_qualifier_enum.FareQualifierENUM(), 
                                stopover_priced = 'Yes', 
                                ticket_designator = 'BB5662Y', 
                                fare_type_code = 'ERU', )
                            ], )
                    ],
        )
        """

    def testImportsCatalogAirReservationResource(self):
        """Test ImportsCatalogAirReservationResource"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
