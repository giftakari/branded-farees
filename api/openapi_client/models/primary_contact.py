# coding: utf-8

"""
    Akaris Travels Air

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 11.10.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import List, Optional
from pydantic import Field, StrictBool, conlist, constr
from openapi_client.models.email import Email
from openapi_client.models.primary_contact_id import PrimaryContactID
from openapi_client.models.share_with_enum import ShareWithEnum
from openapi_client.models.telephone import Telephone
from openapi_client.models.traveler_identifier import TravelerIdentifier

class PrimaryContact(PrimaryContactID):
    """
    PrimaryContact
    """
    share_with: Optional[ShareWithEnum] = Field(None, alias="shareWith")
    share_with_supplier: Optional[conlist(constr(strict=True, max_length=32))] = Field(None, alias="shareWithSupplier", description="Primary contact shared with supplier")
    email: Optional[Email] = Field(None, alias="Email")
    telephone: Optional[Telephone] = Field(None, alias="Telephone")
    traveler_identifier: Optional[TravelerIdentifier] = Field(None, alias="TravelerIdentifier")
    contact_information_refused_ind: Optional[StrictBool] = Field(None, alias="contactInformationRefusedInd", description="If true, the passenger has refused to provide emergency contact details")
    __properties = ["@type", "id", "shareWith", "shareWithSupplier", "Email", "Telephone", "TravelerIdentifier", "contactInformationRefusedInd"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> PrimaryContact:
        """Create an instance of PrimaryContact from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        # override the default output from pydantic by calling `to_dict()` of email
        if self.email:
            _dict['Email'] = self.email.to_dict()
        # override the default output from pydantic by calling `to_dict()` of telephone
        if self.telephone:
            _dict['Telephone'] = self.telephone.to_dict()
        # override the default output from pydantic by calling `to_dict()` of traveler_identifier
        if self.traveler_identifier:
            _dict['TravelerIdentifier'] = self.traveler_identifier.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> PrimaryContact:
        """Create an instance of PrimaryContact from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return PrimaryContact.parse_obj(obj)

        _obj = PrimaryContact.parse_obj({
            "type": obj.get("@type"),
            "id": obj.get("id"),
            "share_with": obj.get("shareWith"),
            "share_with_supplier": obj.get("shareWithSupplier"),
            "email": Email.from_dict(obj.get("Email")) if obj.get("Email") is not None else None,
            "telephone": Telephone.from_dict(obj.get("Telephone")) if obj.get("Telephone") is not None else None,
            "traveler_identifier": TravelerIdentifier.from_dict(obj.get("TravelerIdentifier")) if obj.get("TravelerIdentifier") is not None else None,
            "contact_information_refused_ind": obj.get("contactInformationRefusedInd")
        })
        return _obj


