# coding: utf-8

"""
    Akaris Travels Air

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 11.10.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import List, Optional
from pydantic import BaseModel, Field, StrictBool, StrictStr, conlist
from openapi_client.models.brand_attribute_inclusion import BrandAttributeInclusion
from openapi_client.models.search_representation_enum import SearchRepresentationENUM

class CustomResponseModifiersAir(BaseModel):
    """
    Modifiers to customize the result set
    """
    type: Optional[StrictStr] = Field(None, alias="@type")
    brand_attribute_inclusion: Optional[conlist(BrandAttributeInclusion, max_items=10)] = Field(None, alias="BrandAttributeInclusion")
    search_representation: Optional[SearchRepresentationENUM] = Field(None, alias="SearchRepresentation")
    exclude_penalties_ind: Optional[StrictBool] = Field(None, alias="excludePenaltiesInd", description="If true, Penalties will be excluded from the response")
    exclude_baggage_fees_ind: Optional[StrictBool] = Field(None, alias="excludeBaggageFeesInd", description="If true, Baggage Fees will be inhibited from the response")
    include_fare_calculation_ind: Optional[StrictBool] = Field(None, alias="includeFareCalculationInd", description="if true, the fare calculation string will be returned in the response")
    exclude_surcharges_ind: Optional[StrictBool] = Field(None, alias="excludeSurchargesInd", description="If true, the surcharge breakdown will be excluded from Price_Detail")
    exclude_unbundled_fares_ind: Optional[StrictBool] = Field(None, alias="excludeUnbundledFaresInd", description="If true, unbundled fares will not be returned in the response")
    __properties = ["@type", "BrandAttributeInclusion", "SearchRepresentation", "excludePenaltiesInd", "excludeBaggageFeesInd", "includeFareCalculationInd", "excludeSurchargesInd", "excludeUnbundledFaresInd"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> CustomResponseModifiersAir:
        """Create an instance of CustomResponseModifiersAir from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        # override the default output from pydantic by calling `to_dict()` of each item in brand_attribute_inclusion (list)
        _items = []
        if self.brand_attribute_inclusion:
            for _item in self.brand_attribute_inclusion:
                if _item:
                    _items.append(_item.to_dict())
            _dict['BrandAttributeInclusion'] = _items
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> CustomResponseModifiersAir:
        """Create an instance of CustomResponseModifiersAir from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return CustomResponseModifiersAir.parse_obj(obj)

        _obj = CustomResponseModifiersAir.parse_obj({
            "type": obj.get("@type"),
            "brand_attribute_inclusion": [BrandAttributeInclusion.from_dict(_item) for _item in obj.get("BrandAttributeInclusion")] if obj.get("BrandAttributeInclusion") is not None else None,
            "search_representation": obj.get("SearchRepresentation"),
            "exclude_penalties_ind": obj.get("excludePenaltiesInd"),
            "exclude_baggage_fees_ind": obj.get("excludeBaggageFeesInd"),
            "include_fare_calculation_ind": obj.get("includeFareCalculationInd"),
            "exclude_surcharges_ind": obj.get("excludeSurchargesInd"),
            "exclude_unbundled_fares_ind": obj.get("excludeUnbundledFaresInd")
        })
        return _obj


