# coding: utf-8

"""
    Akaris Travels Air

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 11.10.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import List, Optional
from pydantic import BaseModel, Field, StrictBool, StrictStr, conint, conlist, constr

class CustomerLoyalty(BaseModel):
    """
    Specifies the ID for the membership program.
    """
    value: Optional[constr(strict=True, max_length=1000, min_length=1)] = None
    id: Optional[StrictStr] = Field(None, description="Customer Loyality Id")
    priority: Optional[conint(strict=True, le=300, ge=0)] = Field(None, description="Numeric Priority Code")
    program_id: Optional[constr(strict=True, max_length=128)] = Field(None, alias="programId", description="Specifies an identifier to indicate the company owner of the loyalty program")
    program_name: Optional[constr(strict=True, max_length=128)] = Field(None, alias="programName", description="Supplier's loyalty program name such as Frontier-EarlyReturns")
    supplier_type: Optional[constr(strict=True, max_length=32)] = Field(None, alias="supplierType", description="The kind of supplier of a loyalty program")
    supplier: Optional[constr(strict=True, max_length=128)] = Field(None, description="Supplier of a loyalty program")
    tier: Optional[constr(strict=True, max_length=32)] = Field(None, description="Customer Loyalty tier level")
    share_with_supplier: Optional[conlist(constr(strict=True, max_length=32))] = Field(None, alias="shareWithSupplier", description="The list of suppliers that the CustomerLoyalty number is shared.")
    card_holder_name: Optional[constr(strict=True, max_length=128)] = Field(None, alias="cardHolderName", description="The card holder name")
    validated_ind: Optional[StrictBool] = Field(None, alias="validatedInd", description="Customer loyalty number has been validated by the supplier")
    __properties = ["value", "id", "priority", "programId", "programName", "supplierType", "supplier", "tier", "shareWithSupplier", "cardHolderName", "validatedInd"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> CustomerLoyalty:
        """Create an instance of CustomerLoyalty from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> CustomerLoyalty:
        """Create an instance of CustomerLoyalty from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return CustomerLoyalty.parse_obj(obj)

        _obj = CustomerLoyalty.parse_obj({
            "value": obj.get("value"),
            "id": obj.get("id"),
            "priority": obj.get("priority"),
            "program_id": obj.get("programId"),
            "program_name": obj.get("programName"),
            "supplier_type": obj.get("supplierType"),
            "supplier": obj.get("supplier"),
            "tier": obj.get("tier"),
            "share_with_supplier": obj.get("shareWithSupplier"),
            "card_holder_name": obj.get("cardHolderName"),
            "validated_ind": obj.get("validatedInd")
        })
        return _obj


